/* Qwik Service Worker */
const appBundles=[["q-00b387ef.js",[29]],["q-09bb47a1.js",[23,29],["BUbtvTyvVRE","WmYC5H00wtI"]],["q-0bcb7e5a.js",[29],["T0GZMKDZCyg"]],["q-15863726.js",[29],["FdbX4M10c2k"]],["q-1ae84b46.js",[29]],["q-1b88629f.js",[0,29]],["q-1f502bd1.js",[0,29]],["q-2d03db2c.js",[29]],["q-30332fa3.js",[]],["q-31d630db.js",[29],["mugBPYCrWd4"]],["q-489bd39a.js",[7,20,23,29],["oxFHno0q65A"]],["q-5582dd81.js",[23,29,43],["9HbNuki98sM","d3WSHrdqLlc"]],["q-59bcc394.js",[29,42],["pvSfpEP9GdM"]],["q-6526f08b.js",[23,29],["8gdLBszqbaM","i1Cv0pYJNR0"]],["q-663033b0.js",[],["DyVc0YBIqQU"]],["q-67d0d685.js",[20,29],["CjZOqE3On9Q"]],["q-680d9cf1.js",[29]],["q-698a9b86.js",[23,29,42],["RROCiSXLpBU"]],["q-785df582.js",[23,29],["wOIPfiQ04l4"]],["q-7b3f6920.js",[7,20,23,29],["900feYRxgqE","fKODp7mHk5w"]],["q-7e9f701a.js",[29]],["q-7ea8d041.js",[0,29]],["q-8698f505.js",[23,29],["Nk9PlpjQm9Y","p9MSze0ojs4"]],["q-87241ffd.js",[29]],["q-8ea06850.js",[]],["q-9df74b72.js",[29]],["q-9fb4a746.js",[23,29],["e0ssiDXoeAM"]],["q-a221274f.js",[0,29]],["q-a87055ea.js",[20,23,29,43],["h0P7Uo7GonY"]],["q-aabf3092.js",[]],["q-aad17869.js",[29]],["q-b42eb30e.js",[29],["ZDH6m7xhU0Y"]],["q-b4fe6126.js",[23,29],["0zdjSlyYHGs"]],["q-b54ad918.js",[23,29],["GrGqEiNIrL8"]],["q-b60e817a.js",[29]],["q-b7b48da4.js",[29],["BIIgoEnYwqI"]],["q-be423144.js",[23,29],["02wMImzEAbk","fX0bDjeJa0E","RPDJAz33WLA","TxCFOy819ag"]],["q-c1d3dc37.js",[29],["PGBT6410xR4"]],["q-c2e78db3.js",[29],["A5bZC7WO00A"]],["q-cad01fe2.js",[29],["uAkoKsdd5OI"]],["q-ce4bf8c0.js",[23,29],["eBQ0vFsFKsk"]],["q-d670ff3e.js",[29]],["q-da60caf4.js",[29]],["q-ddc2cabe.js",[]],["q-ee95f427.js",[29]],["q-ef207a7b.js",[7,23,29],["PtIy9e0pwRQ","uxbNVnTmfAY"]],["q-f225141e.js",[0,29]],["q-fea70a1b.js",[0,29]]];
const libraryBundleIds=[36];
const linkBundles=[[/^\/$/,[16,39,34,10]],[/^\/404\.html\/?$/,[16,39,25,31]],[/^\/posts\/cryptopals\/?$/,[16,39,5]],[/^\/posts\/major-version-upgrades\/?$/,[16,39,47]],[/^\/posts\/musings-on-being-a-tech-lead\/?$/,[16,39,46]],[/^\/posts\/new-blog\/?$/,[16,39,21]],[/^\/posts\/statecharts\/?$/,[16,39,6]],[/^\/posts\/thinking-about-pressure\/?$/,[16,39,27]],[/^\/about\/?$/,[16,39,41,2]],[/^\/posts\/?$/,[16,39,4,3]],[/^\/tags\/([^/]+?)\/?$/,[16,39,30,28]]];
const m="QwikBuild",k=new Set,g=new Map,u=[],L=(e,n)=>n.filter(s=>!e.some(i=>s.endsWith(i[0]))),q=(e,n)=>!!n&&!E(n),E=e=>{const n=e.headers.get("Cache-Control")||"";return n.includes("no-cache")||n.includes("max-age=0")},C=(e,n)=>e.some(s=>n.endsWith("/"+s[0])),U=(e,n)=>e.find(s=>s[0]===n),b=(e,n)=>n.map(s=>e[s]?e[s][0]:null),W=(e,n)=>n.map(s=>e.get(s)).filter(s=>s!=null),p=e=>{const n=new Map;for(const s of e){const i=s[2];if(i)for(const c of i)n.set(c,s[0])}return n},v=(e,n,s,i)=>new Promise((c,h)=>{const t=i.url,r=s.get(t);if(r)r.push([c,h]);else{const o=l=>{const a=s.get(t);if(a){s.delete(t);for(const[d]of a)d(l.clone())}else c(l.clone())},f=l=>{const a=s.get(t);if(a){s.delete(t);for(const[d,A]of a)A(l)}else h(l)};s.set(t,[[c,h]]),e.match(t).then(l=>{if(q(i,l))o(l);else return n(i).then(async a=>{a.ok&&await e.put(t,a.clone()),o(a)})}).catch(l=>e.match(t).then(a=>{a?o(a):f(l)}))}}),y=(e,n,s,i,c,h=!1)=>{const t=()=>{for(;u.length>0&&g.size<6;){const o=u.shift(),f=new Request(o);k.has(o)?t():(k.add(o),v(n,s,g,f).finally(t))}},r=o=>{try{const f=U(e,o);if(f){const l=b(e,f[1]),a=new URL(o,i).href,d=u.indexOf(a);d>-1?h&&(u.splice(d,1),u.unshift(a)):h?u.unshift(a):u.push(a),l.forEach(r)}}catch(f){console.error(f)}};Array.isArray(c)&&c.forEach(r),t()},w=(e,n,s,i,c,h,t)=>{try{y(e,i,c,h,b(e,n))}catch(r){console.error(r)}for(const r of t)try{for(const o of s){const[f,l]=o;if(f.test(r)){y(e,i,c,h,b(e,l));break}}}catch(o){console.error(o)}},B=(e,n,s,i)=>{try{const c=i.href.split("/"),h=c[c.length-1];c[c.length-1]="";const t=new URL(c.join("/"));y(e,n,s,t,[h],!0)}catch(c){console.error(c)}},N=(e,n,s,i)=>{const c=e.fetch.bind(e),h=p(n);e.addEventListener("fetch",t=>{const r=t.request;if(r.method==="GET"){const o=new URL(r.url);C(n,o.pathname)&&t.respondWith(e.caches.open(m).then(f=>(B(n,f,c,o),v(f,c,g,r))))}}),e.addEventListener("message",async({data:t})=>{if(t.type==="qprefetch"&&typeof t.base=="string"){const r=await e.caches.open(m),o=new URL(t.base,e.origin);Array.isArray(t.links)&&w(n,s,i,r,c,o,t.links),Array.isArray(t.bundles)&&y(n,r,c,o,t.bundles),Array.isArray(t.symbols)&&y(n,r,c,o,W(h,t.symbols))}}),e.addEventListener("activate",()=>{(async()=>{try{const t=await e.caches.open(m),o=(await t.keys()).map(l=>l.url),f=L(n,o);await Promise.all(f.map(l=>t.delete(l)))}catch(t){console.error(t)}})()})},x=()=>{typeof self<"u"&&typeof appBundles<"u"&&N(self,appBundles,libraryBundleIds,linkBundles)};x();addEventListener("install",()=>self.skipWaiting());addEventListener("activate",()=>self.clients.claim());
