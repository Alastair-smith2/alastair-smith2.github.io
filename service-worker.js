/* Qwik Service Worker */
const appBundles=[["../service-worker.js",[]],["q-8-zDTsU1.js",[49],["PtIy9e0pwRQ"]],["q-90EDeBho.js",[50],["fKODp7mHk5w"]],["q-B-DbrcQS.js",[50],["0zdjSlyYHGs"]],["q-B8mY9CKq.js",[50]],["q-B8zaCFER.js",[2,30],["dGOm1t469xU"]],["q-BDLakoJ_.js",[50],["HlviLuseaIM"]],["q-BFHj7sTW.js",[15],["y1h8XDAlg4c"]],["q-BKE9Ub2k.js",[14]],["q-BNWvrdbS.js",[15],["PGBT6410xR4"]],["q-BQDexP0M.js",[]],["q-BUZE_n0Y.js",[40],["qC0ke6GVJbg"]],["q-BX8hkT7S.js",[50],["lFajsNVuBt8"]],["q-BYolp_6V.js",[50],["pvSfpEP9GdM"]],["q-B_ez5IyZ.js",[50]],["q-Bay4bHT8.js",[],["NuLjTG6G3z8"]],["q-BhEczhvw.js",[50]],["q-BhRjXt6i.js",[14]],["q-BqXrE0lU.js",[43],["EDQA0gIUuGk"]],["q-Brs6NrJb.js",[50],["900feYRxgqE"]],["q-BtT0v2q-.js",[14]],["q-ByZmRsh3.js",[40],["WG90PQWmBN8"]],["q-C-aFbGvz.js",[15],["BIIgoEnYwqI"]],["q-C6d4FJHC.js",[],["GOLd19yEFuY"]],["q-CDmJ2fGq.js",[50]],["q-CDrEseIU.js",[15],["ZDH6m7xhU0Y"]],["q-CFNYZkaF.js",[50]],["q-CLHv2I3z.js",[43],["Mbo8jIiyeio"]],["q-CQJnS7Oh.js",[50],["OmyHfpilDSQ"]],["q-CW9mkDYZ.js",[13],["RROCiSXLpBU"]],["q-CXZoSt9a.js",[50],["d3WSHrdqLlc"]],["q-CeEsoBqm.js",[53],["vrCCgZQmlf8"]],["q-CfkATEOR.js",[43],["yg5Kh9GERDo"]],["q-Cgre8-4o.js",[2],["oxFHno0q65A"]],["q-Co92Nt-N.js",[15],["mugBPYCrWd4"]],["q-CtXIYu7-.js",[50],["gnIvhv2f54g"]],["q-D-ZLfhkj.js",[15],["0ogklHqfuoA"]],["q-D8R4eXEI.js",[50],["9HbNuki98sM"]],["q-DDjULYP3.js",[50],["FdbX4M10c2k"]],["q-DG6BiUOX.js",[14]],["q-DMldwA_J.js",[50],["k9RsdSjpDnU"]],["q-DQbuQx8_.js",[2]],["q-DhUernmf.js",[50],["GrGqEiNIrL8"]],["q-DiUURt4J.js",[50],["8AIsQxMk4QE"]],["q-Dj4Xt2u7.js",[50]],["q-Djz6HhzE.js",[14]],["q-DkSxtsGs.js",[43],["UUZfFPUCovQ"]],["q-Dn8LCYnG.js",[50],["T0GZMKDZCyg"]],["q-Dp3eUgOU.js",[50],["uAkoKsdd5OI"]],["q-GKh0n2jy.js",[2],["uxbNVnTmfAY"]],["q-HLuFnd10.js",[15],["T9o08bNZuBQ"]],["q-Olyfcwux.js",[2],["CjZOqE3On9Q"]],["q-PtHGy96W.js",[50]],["q-T161gSnf.js",[50],["K7aCDNTM0ZE"]],["q-TroX0bWF.js",[50]]];
const libraryBundleIds=[43];
const linkBundles=[[/^\/$/,[52,48,44,33]],[/^\/404\.html\/?$/,[52,48,24,25]],[/^\/posts\/cryptopals\/?$/,[52,48,8]],[/^\/posts\/data-engineering\/?$/,[52,48,17]],[/^\/posts\/major-version-upgrades\/?$/,[52,48,20]],[/^\/posts\/new-blog\/?$/,[52,48,39]],[/^\/posts\/thinking-about-pressure\/?$/,[52,48,45]],[/^\/about\/?$/,[52,48,54,47]],[/^\/posts\/?$/,[52,48,26,38]],[/^\/tags\/([^/]+?)\/?$/,[52,48,4,5]]];
const p=(t,e)=>e.filter(n=>!t.some(c=>n.endsWith(c[0]))),q=(t,e)=>!!e&&!B(e),B=t=>{const e=t.headers.get("Cache-Control")||"";return e.includes("no-cache")||e.includes("max-age=0")},N=(t,e)=>t.some(n=>e.endsWith("/"+n[0])),W=(t,e)=>t.find(n=>n[0]===e),g=(t,e)=>e.map(n=>t[n]?t[n][0]:null),w=(t,e)=>e.map(n=>t.get(n)).filter(n=>n!=null),C=t=>{const e=new Map;for(const n of t){const c=n[2];if(c)for(const o of c)e.set(o,n[0])}return e},k=(t,e,n,c)=>new Promise((o,a)=>{const s=c.url,r=n.get(s);if(r)r.push([o,a]);else{const l=f=>{const i=n.get(s);if(i){n.delete(s);for(const[d]of i)d(f.clone())}else o(f.clone())},u=f=>{const i=n.get(s);if(i){n.delete(s);for(const[d,U]of i)U(f)}else a(f)};n.set(s,[[o,a]]),t.match(s).then(f=>{if(q(c,f))l(f);else return e(c).then(async i=>{i.ok&&await t.put(s,i.clone()),l(i)})}).catch(f=>t.match(s).then(i=>{i?l(i):u(f)}))}}),y="QwikBuild",b=new Set,A=new Map,h=[],m=(t,e,n,c,o,a=!1)=>{Array.isArray(o)&&v(o,t,c,a),L(e,n)};function v(t,e,n,c){for(const o of t)try{const a=W(e,o);if(a){const s=g(e,a[1]),r=new URL(o,n).href,l=h.indexOf(r);l>-1?c&&(h.splice(l,1),h.unshift(r)):(c?h.unshift(r):h.push(r),v(s,e,n,c))}}catch(a){console.error(a)}}function L(t,e){for(;h.length>0&&A.size<6;){const n=h.shift();if(!b.has(n)){const c=new Request(n);b.add(n),k(t,e,A,c).catch(()=>{b.delete(n)}).finally(()=>L(t,e))}}}const E=(t,e,n,c,o,a,s)=>{try{m(t,c,o,a,g(t,e))}catch(r){console.error(r)}for(const r of s)try{for(const l of n){const[u,f]=l;if(u.test(r)){m(t,c,o,a,g(t,f));break}}}catch(l){console.error(l)}},T=(t,e,n,c)=>{try{const{baseUrl:o,requestedBundleName:a}=x(c);m(t,e,n,o,[a],!0)}catch(o){console.error(o)}};function x(t){const e=t.href.split("/"),n=e[e.length-1];return e[e.length-1]="",{baseUrl:new URL(e.join("/")),requestedBundleName:n}}const P=(t,e,n,c)=>{const o=t.fetch.bind(t),a=C(e);t.addEventListener("activate",s=>{(async()=>{try{s.waitUntil(t.caches.keys().then(i=>Promise.all(i.map(d=>{if(d!==y)return caches.delete(d)}))));const r=await t.caches.open(y),u=(await r.keys()).map(i=>i.url),f=p(e,u);await Promise.all(f.map(i=>r.delete(i)))}catch(r){console.error(r)}})()}),t.addEventListener("message",async({data:s})=>{if(s.type==="qprefetch"&&typeof s.base=="string"){const r=await t.caches.open(y),l=new URL(s.base,t.origin);Array.isArray(s.links)&&E(e,n,c,r,o,l,s.links),Array.isArray(s.bundles)&&m(e,r,o,l,s.bundles),Array.isArray(s.symbols)&&m(e,r,o,l,w(a,s.symbols))}}),t.addEventListener("fetch",s=>{const r=s.request;if(r.method==="GET"){const l=new URL(r.url);N(e,l.pathname)&&s.respondWith(t.caches.open(y).then(u=>(T(e,u,o,l),k(u,o,A,r))))}})},Q=()=>{typeof self<"u"&&typeof appBundles<"u"&&P(self,appBundles,libraryBundleIds,linkBundles)};Q();addEventListener("install",()=>self.skipWaiting());addEventListener("activate",()=>self.clients.claim());
