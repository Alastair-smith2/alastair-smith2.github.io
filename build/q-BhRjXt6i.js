import{E as e}from"./q-Bay4bHT8.js";import{A as t,P as i}from"./q-B_ez5IyZ.js";import"./q-HLuFnd10.js";const l=[{text:"Learning about data engineering: Reflecting on what stood out as a software engineer",id:"learning-about-data-engineering-reflecting-on-what-stood-out-as-a-software-engineer",level:1},{text:"Databricks data engineer associate",id:"databricks-data-engineer-associate",level:2},{text:"Lakehouse",id:"lakehouse",level:2},{text:"Medallion architecture",id:"medallion-architecture",level:2},{text:"Extract Load Transform (ELT) vs Extract Transform Load (ETL)",id:"extract-load-transform-elt-vs-extract-transform-load-etl",level:2},{text:"Pipelines, pipelines, pipelines...",id:"pipelines-pipelines-pipelines",level:2},{text:"Compute and scaling",id:"compute-and-scaling",level:2},{text:"Data Governance",id:"data-governance",level:2},{text:"Notebooks, CI/CD and Testing",id:"notebooks-cicd-and-testing",level:2},{text:"Summary",id:"summary",level:2}],h={title:"Learning about data engineering",meta:[{name:"author",content:"Alastair Smith"},{name:"description",content:"Reflecting on what stood out as a software engineer"},{property:"og:title",content:"Reflecting on what stood out as a software engineer"},{property:"og:description",content:"Reflecting on what stood out as a software engineer"}],styles:[],links:[],scripts:[],frontmatter:{Date:"05/11/2023"}},c={title:"Learning about data engineering",author:"Alastair Smith",description:"Reflecting on what stood out as a software engineer",Date:"05/11/2023",og:[{title:"Reflecting on what stood out as a software engineer",description:!0}]};function o(n){const a={a:"a",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",span:"span",...n.components};return e(i,{children:[e(a.h1,{id:"learning-about-data-engineering-reflecting-on-what-stood-out-as-a-software-engineer",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#learning-about-data-engineering-reflecting-on-what-stood-out-as-a-software-engineer",children:e(a.span,{class:"icon icon-link"})}),"Learning about data engineering: Reflecting on what stood out as a software engineer"]}),e(a.ol,{children:[`
`,e(a.li,{children:e(a.a,{href:"#databricks-data-engineer-associate",children:"Databricks data engineer associate"})}),`
`,e(a.li,{children:e(a.a,{href:"#lakehouse",children:"Lakehouse"})}),`
`,e(a.li,{children:e(a.a,{href:"#medallion-architecture",children:"Medallion architecture"})}),`
`,e(a.li,{children:e(a.a,{href:"#extract-load-transform-elt-vs-extract-transform-load-etl",children:"Extract Load Transform (ELT) vs Extract Transform Load (ETL)"})}),`
`,e(a.li,{children:e(a.a,{href:"#pipelines-pipelines-pipelines",children:"Pipelines, pipelines, pipelines..."})}),`
`,e(a.li,{children:e(a.a,{href:"#compute-and-scaling",children:"Compute and scaling"})}),`
`,e(a.li,{children:e(a.a,{href:"#data-governance",children:"Data Governance"})}),`
`,e(a.li,{children:e(a.a,{href:"#notebooks-cicd-and-testing",children:"Notebooks, CI/CD and Testing"})}),`
`,e(a.li,{children:e(a.a,{href:"#summary",children:"Summary"})}),`
`]}),e(a.h2,{id:"databricks-data-engineer-associate",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#databricks-data-engineer-associate",children:e(a.span,{class:"icon icon-link"})}),"Databricks data engineer associate",e("a",{name:"databricks-data-engineer-associate"})]}),e(a.p,{children:["Recently I passed the ",e(t,{text:"Databricks data engineer associtate certification",href:"https://www.databricks.com/learn/certification/data-engineer-associate"}),". Data engineering was something I had never done much of before. While I don’t foresee myself doing this as a permanent role I wanted to be able to contribute and have some understanding of “what does good look like”."]}),e(a.p,{children:"This is going to be a summary of some of what stood out, for various reasons, as someone who"}),e(a.ol,{children:[`
`,e(a.li,{children:"Has done little to no data engineering before."}),`
`,e(a.li,{children:"Primarily comes from a software engineering (developer) background. I’ve done more with web-based applications but did mobile-only for a while."}),`
`,e(a.li,{children:"Has worked on products which involved needing to understand scaling, cost control and permission concerns while using different cloud providers."}),`
`,e(a.li,{children:"Enjoys working in the intersection between applications and platform engineering."}),`
`,e(a.li,{children:["Has only written Python once and exposure to SQL has primarily being through tools like ",e(t,{text:"JOOQ",href:"https://www.jooq.org/"})," and ",e(t,{text:"Prisma",href:"https://www.prisma.io/"}),". I’ve recently been making more of an effort to be more proficient with SQL without an abstraction."]}),`
`,e(a.li,{children:"Learning experience was done through Databricks and their offerings"}),`
`]}),e(a.h2,{id:"lakehouse",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#lakehouse",children:e(a.span,{class:"icon icon-link"})}),"Lakehouse",e("a",{name:"lakehouse"})]}),e(a.p,{children:["I had heard of data lakes and data warehouses before but never of a ",e(t,{text:"data lakehouse",href:"https://www.databricks.com/glossary/data-lakehouse"}),". Databricks makes a big deal about in their fundamentals for variety of reasons. The reason which stood out the most was about trying to have an assurance of the quality of the data present at scale. Lakes and warehouses have their challenges. For example with a lake you’re able to stream a wide variety of data to your hearts content but it can be a nightmare to manage governance. Or with a warehouse you’re able to enforce a schema and have some transactional guarantees but adapting to an evolving data structure at scale is painful. Understanding how your data solution navigates these trade offs, which is fundamentally a result of the foundation it’s built upon, and what volume you’ll be working at is well worthwhile."]}),e(a.h2,{id:"medallion-architecture",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#medallion-architecture",children:e(a.span,{class:"icon icon-link"})}),"Medallion architecture",e("a",{name:"medallion-architecture"})]}),e(a.p,{children:["The ",e(t,{text:"medallion architecture",href:"https://www.databricks.com/glossary/medallion-architecture"})," was the concept which I hadn’t heard of before but benefits stood out immediately. The core concept is having different stages of data, bronze (raw), silver (cleaned) and gold (enriched), which can be used for different organisation activity. Examples of each would be:"]}),e(a.ol,{children:[`
`,e(a.li,{children:"Bronze data is the raw data as originally ingested and the removal of PII. Metadata such as timestamps can be added here"}),`
`,e(a.li,{children:"Silver data would be duplicates removed from the bronze data"}),`
`,e(a.li,{children:"Gold data consists of aggregations of silver data which are then used in reports, ML training etc."}),`
`]}),e(a.p,{children:"It was the bronze layer which stood out in particular. Why? Because if you ever change what view of data you need, as most organisations go through, then you’re able to recreate your silver / gold layers as appropriate for you new need. This is a result of having the raw underlying data. It enables the ability to change with more ease than if you didn’t have that data available or it had already been transformed."}),e(a.p,{children:"The potentially complicated issue here is around whether that data allowed to be used in the proposed manner. Providing that is allowed then an organisations data capability is able to evolve."}),e(a.h2,{id:"extract-load-transform-elt-vs-extract-transform-load-etl",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#extract-load-transform-elt-vs-extract-transform-load-etl",children:e(a.span,{class:"icon icon-link"})}),"Extract Load Transform (ELT) vs Extract Transform Load (ETL)",e("a",{name:"extract-load-transform-elt-vs-extract-transform-load-etl"})]}),e(a.p,{children:["I had never heard of ELT before doing the certification. I had heard of ETL. There’s an important implication in the differences between these two concepts which I had missed until revising the medaliion architecture. The same steps occur, as evident by the name, but the ordering is different. The has implications on approaches such as the Medallion architecture listed, where ideally you have all of the raw data, but there are other considerations such as governance and storage. Governance in particular is what stands out, especially as someone who is mindful of GDPR, and how although ELT would allow more flexibility there are higher risks of data being present which is sensitive. ",e(t,{href:"https://www.databricks.com/discover/etl/vs-elt"})," does more of a deep dive as to why you’d want to use one over the other."]}),e(a.h2,{id:"pipelines-pipelines-pipelines",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#pipelines-pipelines-pipelines",children:e(a.span,{class:"icon icon-link"})}),"Pipelines, pipelines, pipelines...",e("a",{name:"pipelines-pipelines-pipelines"})]}),e(a.p,{children:"There can be many steps involved in transforming data from one stage to another (e.g. bronze to silver). This needs a way of being automated and handling the scenarios of intermitent errors, unexpected data quality issues, being able to easily identify why a job failed and coordination of dependencies to mention a few. Given that I quite enjoy pipeline work as an enabler of the developer experience I found the concepts around this section quite natural. I found Databrick’s pipeline offerings mapped very similarly to other tools I had used before."}),e(a.h2,{id:"compute-and-scaling",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#compute-and-scaling",children:e(a.span,{class:"icon icon-link"})}),"Compute and scaling",e("a",{name:"compute-and-scaling"})]}),e(a.p,{children:["Givene that I’ve worked with cloud based products I didn’t find much new here for what I studied. Data transformation can involve very small sets of data to develop against but then involve very large sets in production. A way to be able to handle that scale in a time reasonable and cost effective manner is required. That by definition means some compute is required for the actual processing and ideally the ability to scale up / down depending upon the data set. Having data processed in real time is preferable from a decision making ability. I suspect if I had done ",e(t,{href:" https://www.databricks.com/learn/certification/apache-spark-developer-associate"})," I’d learned some more of the cleverness Spark does underneath the hood than what I'm aware of already. The studying I did covered the benefits of ",e(t,{href:"https://www.databricks.com/product/photon"})," at a high level but that is a Databricks’ specific offering."]}),e(a.h2,{id:"data-governance",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#data-governance",children:e(a.span,{class:"icon icon-link"})}),"Data Governance",e("a",{name:"data-governance"})]}),e(a.p,{children:"I found the concerns around governance conceptually remained the same between what I’m use to and data engineering even if the details differed. The high level principle of least privilege (e.g. who actually needs access to production and for what cloud resources), concerns around auditability and being able to easily manage permissions didn’t really differ."}),e(a.h2,{id:"notebooks-cicd-and-testing",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#notebooks-cicd-and-testing",children:e(a.span,{class:"icon icon-link"})}),"Notebooks, CI/CD and Testing",e("a",{name:"#notebooks-cicd-and-testing"})]}),e(a.p,{children:"I had never worked with Notebooks before. As far as iterative feedback goes they’re great. They provide the ability to co-author and debug with others. What I did find less intuiative was using these, particularly cells, as a way to break down steps of transformation. The ability to go “run this other notebook from this path” feels like it could become unweidly in terms of understanding the ordering even if Databricks Delta Live Tables (DLT) figures that out for you. But then again depending upon how you structure application code you can get the same issues and I’d be curious to work more with notebooks to see how some of what I found unituiative plays out."}),e(a.p,{children:["With that being said I did find the emphasis on being able to support CI/CD by versioning notebooks, at least with Databricks folders (repos), reassuring. While I have my own preferences around version control best practices the first step is unilaterally having stuff in version control! I’d like to have heard more about ",e(a.a,{href:"https://docs.databricks.com/en/dev-tools/bundles/index.html",children:"https://docs.databricks.com/en/dev-tools/bundles/index.html"})," as part of the certification which I’ve seen some of my colleagues demonstrate."]}),e(a.p,{children:["One part which wasn’t covered at all in the learning, that in part I was disappointed about, was automated testing. There was tons around quality, such as constraints in DLT which gives you the option to drop bad rows upon transformation and it is easy to identify issues, but the ability to test notebooks and source file code was absent. They do have ",e(a.a,{href:"https://docs.databricks.com/en/notebooks/testing.html",children:"documentation"})," on this but it wasn’t covered as part of the course."]}),e(a.h2,{id:"summary",children:[e(a.a,{"aria-hidden":"true",tabindex:"-1",href:"#summary",children:e(a.span,{class:"icon icon-link"})}),"Summary",e("a",{name:"summary"})]}),e(a.p,{children:"I’d do the course again knowing what I do now. I personally feel like I’ve gained enough skills that I’d be able to contribute on a data engineering project which is using Databricks. There’d still be a lot to learn depending upon the setup but I’m confident I’d be able to pick that up. Some areas I’d want hope to dig more into for my own understanding would be around testing and production CI/CD setups."}),e(a.p,{children:"What did standout as the biggest similarity between what I do day to day and data engineering was around how much focus goes into supporting evolution. My primary experience of that on a technical level is around application and architectural concerns and culturally around scaling teams and communication, ways of working, prioritising flow etc. A lot of what I saw in learning about data engineering was trying to support a different type of evolution. Whether that was around supporting an organisation’s need of how data is used, the ability to transform data or governance. In many ways that’s unsurprising - it’s one of the hardest bits of working with software."})]})}const u=()=>{const n=o({});return typeof MDXLayout=="function"?e(MDXLayout,{children:n}):n};export{u as default,c as frontmatter,h as head,l as headings};
