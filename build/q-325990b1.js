import{d as i,k as n,m as e}from"./q-6ae8a93a.js";import{A as r,P as s}from"./q-9ed2df56.js";const d=[{text:"Learnings from cryptopals",id:"learnings-from-cryptopals",level:1},{text:"What is cryptopals?",id:"what-is-cryptopals",level:2},{text:"What makes a suitable cryptographic algorithm, the “trapdoor” effect.",id:"what-makes-a-suitable-cryptographic-algorithm-the-trapdoor-effect",level:2},{text:"Why cryptographic solutions widely used today are secure for now.",id:"why-cryptographic-solutions-widely-used-today-are-secure-for-now",level:2},{text:"It’s amazingly simple to shoot yourself in the foot with cryptography algorithms",id:"its-amazingly-simple-to-shoot-yourself-in-the-foot-with-cryptography-algorithms",level:2},{text:"Implementing Diffie-Hellman",id:"implementing-diffie-hellman",level:2},{text:"Summary",id:"summary",level:2}],p={title:"Learnings from cryptopals",meta:[{name:"author",content:"Alastair Smith"},{name:"description",content:"Some lessons learnt from doing the cryptopals challenge"},{property:"og:title",content:"Some lessons learnt from doing the cryptopals challenge"},{property:"og:description",content:"Some lessons learnt from doing the cryptopals challenge"}],styles:[],links:[],frontmatter:{}},m={title:"Learnings from cryptopals",author:"Alastair Smith",description:"Some lessons learnt from doing the cryptopals challenge",og:[{title:"Some lessons learnt from doing the cryptopals challenge",description:!0}]};function o(a){const t=Object.assign({h1:"h1",a:"a",span:"span",ol:"ol",li:"li",h2:"h2",p:"p",blockquote:"blockquote",ul:"ul"},a.components);return e(s,{children:[e(t.h1,{id:"learnings-from-cryptopals",children:[e(t.a,{"aria-hidden":"true",tabindex:"-1",href:"#learnings-from-cryptopals",children:e(t.span,{class:"icon icon-link"})}),"Learnings from cryptopals"]}),e(t.ol,{children:[`
`,e(t.li,{children:e(t.a,{href:"#cryptopals",children:"What is cryptopals?"})}),`
`,e(t.li,{children:e(t.a,{href:"#trapdoor",children:"What makes a good cryptographic algorithm"})}),`
`,e(t.li,{children:e(t.a,{href:"#secure-for-now",children:"Why current crytopgprahic algorithms are secure, for now"})}),`
`,e(t.li,{children:e(t.a,{href:"#difficult",children:"It's incredibly easy to make mistakes"})}),`
`,e(t.li,{children:e(t.a,{href:"#diffie-hellman",children:"Diffie-Hellman"})}),`
`,e(t.li,{children:e(t.a,{href:"#summary",children:"Summary"})}),`
`]}),e(t.h2,{id:"what-is-cryptopals",children:[e(t.a,{"aria-hidden":"true",tabindex:"-1",href:"#what-is-cryptopals",children:e(t.span,{class:"icon icon-link"})}),"What is cryptopals?",e("a",{name:"cryptopals"})]}),e(r,{text:"",href:""}),e(t.p,{children:[`At first glance people could be mistaken for thinking this post is going to be related
to cryptocurrency. `,e(r,{text:"Cryptopals",href:"https://cryptopals.com/"}),` is a series of challenges that relate to cryptography. Cryptogprahy is essential
to the modern internet, it helps provides security by preventing others from intercepting
secure communication. The challenges are intended to be a way to learn more about
cryptography by giving problems that show how real world attacks work. This post
is a selective list of learnings from the challenges and wider reading.`]}),e(t.h2,{id:"what-makes-a-suitable-cryptographic-algorithm-the-trapdoor-effect",children:[e(t.a,{"aria-hidden":"true",tabindex:"-1",href:"#what-makes-a-suitable-cryptographic-algorithm-the-trapdoor-effect",children:e(t.span,{class:"icon icon-link"})}),"What makes a suitable cryptographic algorithm, the “trapdoor” effect.",e("a",{name:"trapdoor"})]}),e(t.p,{children:["Cryptography heavily relies upon maths, using various algorithms that unless you're privy to some information current computers can't compute reasonable time frame. These are ",e(r,{text:"trapdoor functions",href:"https://en.wikipedia.org/wiki/Trapdoor_function"}),", easy to produce a result in one direction, but difficult to produce the inverse without some secret information and why algorithms such as ",e(r,{text:"RSA",href:"https://en.wikipedia.org/wiki/RSA_(cryptosystem)"})," and ",e(r,{text:"ECDSA",href:"https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm"})," are widely used today."]}),e(t.h2,{id:"why-cryptographic-solutions-widely-used-today-are-secure-for-now",children:[e(t.a,{"aria-hidden":"true",tabindex:"-1",href:"#why-cryptographic-solutions-widely-used-today-are-secure-for-now",children:e(t.span,{class:"icon icon-link"})}),"Why cryptographic solutions widely used today are secure for now.",e("a",{name:"secure-for-now"})]}),e(t.p,{children:["Many of the current “trapdoor functions” leverage ",e(r,{text:"integer factorization",href:"https://en.wikipedia.org/wiki/Integer_factorization"}),", RSA being the prime example. Though in recent times elliptic curves have become a popular alternative that leverage computing discrete logarithms. This ",e(r,{text:"cloudflare article",href:"https://blog.cloudflare.com/a-relatively-easy-to-understand-primer-on-elliptic-curve-cryptography/"})," is an excellent resource on the inner workings of elliptic curves and the contrast of discrete logarithms to integer factorization. These approaches are appropriate today because current computers do not have sufficient power to produce the inverse in a reasonable time frame. However that’s almost guaranteed to change in the future with ",e(r,{text:"quantum computers",href:"https://blog.cloudflare.com/towards-post-quantum-cryptography-in-tls/"})," and there is a very real need to start creating algorithms that are post-quantum proof. For those interested, ",e(r,{text:"this blog post",href:"https://blog.cloudflare.com/nist-post-quantum-surprise/"})," is a great discussion of some of the current challenges around post-quantum cryptography and some of the algorithms that are looking to be standardised."]}),e(t.h2,{id:"its-amazingly-simple-to-shoot-yourself-in-the-foot-with-cryptography-algorithms",children:[e(t.a,{"aria-hidden":"true",tabindex:"-1",href:"#its-amazingly-simple-to-shoot-yourself-in-the-foot-with-cryptography-algorithms",children:e(t.span,{class:"icon icon-link"})}),"It’s amazingly simple to shoot yourself in the foot with cryptography algorithms",e("a",{name:"difficult"})]}),e(t.p,{children:"There's good reason why the general guidance around cryptography is not to roll your own. On the cryptopals website it states"}),e(t.blockquote,{children:[`
`,e(t.p,{children:"If you're not that familiar with crypto already, or if your familiarity comes mostly from things like Applied Cryptography, this fact may surprise you: most crypto is fatally broken. The systems we're relying on today that aren't known to be fatally broken are in a state of just waiting to be fatally broken. Nobody is sure that TLS 1.2 or SSH 2 or OTR are going to remain safe as designed."}),`
`]}),e(t.p,{children:"and given some of the attacks that are walked through, it’s understandable why the more disconcerting statement is also made:"}),e(t.blockquote,{children:[`
`,e(t.p,{children:"Counting is not a hard problem. But cryptography is. There are just a few things you can screw up to get the size of a buffer wrong. There are tens, probably hundreds, of obscure little things you can do to take a cryptosystem that should be secure even against an adversary with more CPU cores than there are atoms in the solar system, and make it solveable with a Perl script and 15 seconds. Don't take our word for it: do the challenges and you'll see."}),`
`]}),e(t.p,{children:"Some easy mistakes to make if you're not careful (with links that cover various concepts referenced in more detail than I'm going to here) are:"}),e(t.ol,{children:[`
`,e(t.li,{children:["Using pseduo random number generators (PRNG) instead of cryptographically secure pseudorandom number generator (CSPRNG).",`
`,e(t.ul,{children:[`
`,e(t.li,{children:["PRNG are not designed for cryptography and can be the basis of ",e(r,{href:"https://cwe.mitre.org/data/definitions/338.html",text:"various attacks"})]}),`
`,e(t.li,{children:"This can cause item 2 below"}),`
`,e(t.li,{children:[`
`,e(r,{href:"https://abrictosecurity.com/extracting-private-keys-from-public-keys-generated-with-weak-random-number-generators/",text:"Cause weak public RSA keys that can be used to extract the private key"}),`
`]}),`
`]}),`
`]}),`
`,e(t.li,{children:[`
`,e(r,{href:"https://github.com/christianlundkvist/blog/blob/master/2021_01_25_nonce_reuse_in_encryption/nonce_reuse_in_encryption.md",text:"Reusing a nonce, this can lead to the ability to determine the plaintext of encrypted messages without the secret key."}),`
`]}),`
`,e(t.li,{children:["MAC-then-Encrypt, this provides no guarantee about the authenticity of the data being transferred and has been the basis of timing attacks such as the ",e(r,{href:"https://en.wikipedia.org/wiki/Lucky_Thirteen_attack",text:"lucky thirteen attack against TLS"}),". ALWAYS Encrypt-then-MAC by ",e(r,{href:"https://crypto.stackexchange.com/questions/202/should-we-mac-then-encrypt-or-encrypt-then-mac",text:"default"}),"."]}),`
`]}),e(t.h2,{id:"implementing-diffie-hellman",children:[e(t.a,{"aria-hidden":"true",tabindex:"-1",href:"#implementing-diffie-hellman",children:e(t.span,{class:"icon icon-link"})}),"Implementing Diffie-Hellman",e("a",{name:"diffie-hellman"})]}),e(t.p,{children:["This is the activity I enjoyed most, albeit one of the more simpler challenges. ",e(r,{href:"https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange#",text:"Diffie-Hellman"})," as an algorithm paved the way for exchanging crytographic keys for parties who may never have had contact before and establish a joint secret key. Wikipedia have an excellent analogy as a visual diagram that shows the process: ",e("img",{src:"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Diffie-Hellman_Key_Exchange.svg/250px-Diffie-Hellman_Key_Exchange.svg.png",style:"background-color: white; margin: 2rem auto;"})," The vital part is even with a person listening in on the exchange and being able to see the common paint and initial mixed result, they could not derive the secret paint chosen in a reasonable time manner - the trapdoor effect referenced earlier. In reality very large numbers are used insteaad of paint. I enjoyed learning some of the maths behind this one, how modpow works and how to utilise it in ",e(r,{href:"https://docs.rs/num-bigint/latest/num_bigint/struct.BigUint.html#method.modpow",text:"Rust"}),"."]}),e(t.h2,{id:"summary",children:[e(t.a,{"aria-hidden":"true",tabindex:"-1",href:"#summary",children:e(t.span,{class:"icon icon-link"})}),"Summary",e("a",{name:"summary"})]}),e(t.p,{children:"I really enjoyed (and found very frustrating at points) some of the cryptopals challenges. I've learned a lot about cryptography that I didn't know before such as the inner working of some algorithms and how they can be attacked. There are many elements (e.g. the inner workings of elliptic curves) that I would not dare claim to be an expert but I have a lot more working knowledge and points of reference than I did when I started cryptopals."}),e(t.p,{children:"I ran into a situation recently where a upgrade highlighted the use of a no longer fit for purpose algorithm in a system. Furthermore while considering solutions one of options (very quickly discounted given the following) actually rolled their own version of an algorithm that is no longer considered fit for purpose... It was very rewarding to have a deeper understanding of why and being able to leverage it."})]})}function l(a={}){const{wrapper:t}=a.components||{};return t?e(t,Object.assign({},a,{children:e(o,a)})):o(a)}const u=()=>i(n,{children:i(l,{},3,null)},3,"rLHMtI8v");export{u as default,m as frontmatter,p as head,d as headings};
